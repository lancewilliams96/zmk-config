/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | SHFT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E           &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D           &kp F  &kp G      &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C           &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RALT
                         &kp LEFT_SHIFT  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |  UP |     |     |      |
            // | CTRL | BTCLRALL |     |     |     |     |   |     | LFT | DWN | RGT |     | ALT  |
            //                    | GUI |     | SPC |   | ENT |     | SHFT |

            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3          &kp N4        &kp N5          &kp N6     &kp N7    &kp N8        &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &trans     &trans    &kp UP        &trans     &trans  &trans
&kp LCTRL   &out OUT_TOG  &trans        &trans          &trans        &trans          &trans     &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &kp RALT
                                        &kp LEFT_SHIFT  &trans        &kp RET         &kp SPACE  &trans    &kp LEFT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | TAB |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | SHFT |

            bindings = <
&kp ESC    &kp EXCL  &kp AT  &kp HASH        &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp TAB    &trans    &trans  &trans          &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL  &trans    &trans  &trans          &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LEFT_SHIFT  &trans    &kp RET      &kp SPACE  &trans     &kp LGUI
            >;
        };
    };
};
